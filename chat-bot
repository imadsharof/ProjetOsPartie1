#!/bin/bash

if [[ $# -ne 1 && $# -ne 2 ]]; then
    echo "chat-bot destinataire [pseudo]" >&2
    exit 1
fi

pseudo_destinataire="$1"
pseudo_utilisateur="${2:-bot}"
liste_bot="liste-bot.txt"

# DÃ©marrer le programme 'chat' en coprocessus
coproc CHAT_PIPES { ./chat "$pseudo_utilisateur" "$pseudo_destinataire" --bot; }

function reponse_liste_bot() {
    local command="$1"
    local response=$(grep -m 1 "^${command} " "$liste_bot" | cut -d' ' -f2-)

    if [ -n "$response" ]; then
        echo "$response" >&"${CHAT_PIPES[1]}"
    else
        echo "ðŸ¤– ?" >&"${CHAT_PIPES[1]}"
    fi
}

function reponse() {
    local message="$1"
    # Extraire la partie aprÃ¨s '] '
    local input="${message#*\] }"

    # VÃ©rifier si l'extraction a rÃ©ussi
    if [ "$input" == "$message" ]; then
        # Pas de ']' trouvÃ©, message invalide
        return
    fi

    case "$input" in
        "liste")
            ls >&"${CHAT_PIPES[1]}"
            ;;
        "qui suis-je")
            echo "$pseudo_destinataire" >&"${CHAT_PIPES[1]}"
            ;;
        "au revoir")
            # Envoyer un message de dÃ©part (optionnel)
            echo "Au revoir !" >&"${CHAT_PIPES[1]}"
            # Terminer le script avec le code de retour 0
            exit 0
            ;;
        li\ *)
            local file="${input#li }"
            if [ -f "$file" ]; then
                # Lire le contenu du fichier ligne par ligne
                while IFS= read -r line; do
                    echo "$line" >&"${CHAT_PIPES[1]}"
                done < "$file"
            else
                echo "Erreur : fichier '$file' introuvable." >&"${CHAT_PIPES[1]}"
            fi
            ;;
        *)
            reponse_liste_bot "$input"
            ;;
    esac
}

# Boucle principale pour lire les messages du chat
while read -r message <&"${CHAT_PIPES[0]}"; do
    reponse "$message"
done

